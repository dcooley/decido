usethis::use_rcpp()
usethis::use_rcpp()
usethis::use_package_doc()
library(dopey.cpp)
devtools::load_all(".")
library(dopey.cpp)
library(dopey.cpp)
usethis::use_build_ignore("reg.R")
library(dopey.cpp)
dopey(1, 2)
source("reg.R")
source("reg.R")
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
source("reg.R")
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
source("reg.R")
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
source("reg.R")
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
source("reg.R")
library(dopey.cpp)
dopey(1, 2)
tools::package_native_routine_registration_skeleton("../dopey.cpp",
"src/dopey.cpp-init.c",character_only = FALSE)
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
tools::package_native_routine_registration_skeleton("../dopey.cpp",
"src/dopey.cpp-init.c",character_only = FALSE)
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
source("reg.R")
library(dopey.cpp)
dopey(1, 2)
dopey(1:2, 2:3)
getwd()
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
devtools::load_all(".")
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
dopey(1:10, 2)
dopey(1:10, 2:200)
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
library(dopey.cpp)
dopey(1, 2)
dopey(1:10, 1:10)
library(silicate)
data("minimal_mesh", package = "silicate")
sf::sc_coordinates(minimal_mesh)
sf::sc_coordinate(minimal_mesh)
sf::st_coordinates(minimal_mesh)
sf::st_coordinates(minimal_mesh)$X[1:8]
sf::st_coordinates(minimal_mesh)[1:8, "X"]
dput(sf::st_coordinates(minimal_mesh)[1:7, "X"])
dput(sf::st_coordinates(minimal_mesh)[1:7, "Y"])
library(dopey.cpp)
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0)
dopey(x, y)
library(dopey.cpp)
library(dopey.cpp)
library(dopey.cpp)
dopey(x, y)
library(dopey.cpp)
usethis::use_data_raw()
system("
cd data-raw
#git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
cp earcut.hpp/LICENSE ../src/
cd earcut.hpp
git log -n 5  >  ../mapbox-earcut.hpp.git.log
")
system("
cd data-raw
git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
cp earcut.hpp/LICENSE ../src/
cd earcut.hpp
git log -n 5  >  ../mapbox-earcut.hpp.git.log
")
library(dopey.cpp)
dopey(x, y)
library(dopey.cpp)
dopey(x, y)
library(dopey.cpp)
dopey(x, y)
library(dopey.cpp)
dopey(x, y)
library(dopey.cpp)
dopey(x, y)
source("reg.R")
library(earcut.hpp)
source("reg.R")
library(earcut.hpp)
source("reg.R")
source("reg.R")
library(earcut.cpp)
earcut(x, y)
usethis::use_readme_rmd()
library(earcut.cpp)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0)
earcut(x, y)
plot(x, y)
polygon(x, y)
apply(matrix(earcut(x, y), nrow = 3), 2, function(ind) polygon(cbind(x, y)[ind, ]))
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0)
earcut(x, y)
plot(x, y)
polygon(x, y)
apply(matrix(earcut(x, y), nrow = 3), 2, function(ind) polygon(cbind(x, y)[ind + 1, ]))
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0)
earcut(x, y)
plot(x, y)
polygon(x, y, lwd = 4)
apply(matrix(earcut(x, y), nrow = 3), 2, function(ind) polygon(cbind(x, y)[ind + 1, ], col = "firebrick"))
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0)
earcut(x, y)
plot(x, y)
polygon(x, y, lwd = 10)
apply(matrix(earcut(x, y), nrow = 3), 2, function(ind) polygon(cbind(x, y)[ind + 1, ], col = "firebrick"))
library(oz)
library(oz)
oz_ring <- oz::oz(states = FALSE)
names(oz_ring)
str(oz_ring)
library(oz)
oz_ring <- oz::oz(states = FALSE, plot = FALSE)
ith <- which(is.na(oz_ring$))
?oz
oz_ring <- oz::ozRegion(states = FALSE)
oz_ring$lines
str(oz_ring$lines)
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[1]]
plot(ring)
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[2]]
plot(ring)
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[3]]
plot(ring)
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[4]]
plot(ring)
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[5]]
plot(ring)
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[6]]
plot(ring)
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[6]]
plot(ring, pch = ".")
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[6]]
plot(ring, pch = ".")
indices <- earcut(ring$x, ring$y)
xy <- ring$x, ring$y
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[6]]
plot(ring, pch = ".")
indices <- earcut(ring$x, ring$y)
xy <- cbind(ring$x, ring$y)
apply(matrix(indices, nrow = 3), 2, function(ind) polygon(xy[ind + 1, ]))
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[6]]
plot(ring, pch = ".", asp = 1/cos(42 * pi/180))
indices <- earcut(ring$x, ring$y)
xy <- cbind(ring$x, ring$y)
apply(matrix(indices, nrow = 3), 2, function(ind) polygon(xy[ind + 1, ]))
library(earcut.cpp)
pkgdown::build_site()
rearcut::rearcut(ring$x, ring$y)
source("reg.R")
source("reg.R")
library(decido)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(decido)
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0)
earcut(x, y)
plot(x, y)
polygon(x, y, lwd = 10)
apply(matrix(earcut(x, y), nrow = 3), 2, function(ind) polygon(cbind(x, y)[ind + 1, ], col = "firebrick"))
library(oz)
oz_ring <- oz::ozRegion(states = FALSE)
ring <- oz_ring$lines[[6]]
plot(ring, pch = ".", asp = 1/cos(42 * pi/180))
indices <- earcut(ring$x, ring$y)
xy <- cbind(ring$x, ring$y)
apply(matrix(indices, nrow = 3), 2, function(ind) polygon(xy[ind + 1, ]))
rbenchmark::benchmark(rearcut::earcut(cbind(ring$x, ring$y)), decido::earcut(ring$x, ring$y))
rearcut::earcut
rearcut:::earcut.default
library(decido)
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0)
earcut(x, y)
earcut(x, y, holes = 1)
data("minimal_mesh", package = "silicate")
sc <- sf::st_coordinates(minimal_mesh)
sc
dput(sc[1:14, "X"])
dput(sc[1:14, "Y"])
library(decido)
x
earcut(x, y)
?earcut
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0, 0.2,
0.5, 0.5, 0.3, 0.2, 0.2)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0, 0.2,
0.2, 0.4, 0.6, 0.4, 0.2)
earcut(x, y, holes = 8, numhols = 1)
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0, 0.2,
0.5, 0.5, 0.3, 0.2, 0.2)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0, 0.2,
0.2, 0.4, 0.6, 0.4, 0.2)
earcut(x, y, holes = 8, numholes = 1)
library(decido)
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0, 0.2,
0.5, 0.5, 0.3, 0.2, 0.2)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0, 0.2,
0.2, 0.4, 0.6, 0.4, 0.2)
earcut(x, y, holes = 8, numhols = 1)
library(decido)
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0, 0.2,
0.5, 0.5, 0.3, 0.2, 0.2)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0, 0.2,
0.2, 0.4, 0.6, 0.4, 0.2)
ind <- earcut(x, y, holes = 8, numholes = 1)
plot(x, y, asp = 1)
xy <- cbind(xy)
apply(matrix(ind, 3), 2, function(i) polygon(xy[i + 1, ]))
ind
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0, 0.2,
0.5, 0.5, 0.3, 0.2, 0.2)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0, 0.2,
0.2, 0.4, 0.6, 0.4, 0.2)
ind <- earcut(x, y, holes = 8, numholes = 1)
plot(x, y, asp = 1)
xy <- cbind(x,y)
apply(matrix(ind, 3), 2, function(i) polygon(xy[i + 1, ]))
library(decido)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
## hole starts at 9
x <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0, 0.2,
0.5, 0.5, 0.3, 0.2, 0.2)
y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0, 0.2,
0.2, 0.4, 0.6, 0.4, 0.2)
ind <- earcut(x, y, holes = 8, numholes = 1)
plot(x, y, asp = 1)
xy <- cbind(xy)
apply(matrix(ind, 3), 2, function(i) polygon(xy[i + 1, ]))
devtools::use_news_md()
usethis::use_news_md()
source("reg.R")
pkgdown::build_site()
usethis::use_travis()
usethis::use_travis()
usethis::use_appveyor()
usethis::use_coverage()
usethis::use_code_of_conduct()
library(decido)
usethis::use_lifecycle_badge()
?usethis::use_lifecycle_badge
usethis::use_lifecycle_badge("Maturing")
getwd()
